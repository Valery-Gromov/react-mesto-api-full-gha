{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nconst getResponse = res => {\n  return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n};\nexport const register = (userEmail, userPassword) => {\n  console.log(userEmail, userPassword);\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    },\n    body: JSON.stringify({\n      \"password\": userEmail,\n      \"email\": userPassword\n    })\n  }).then(getResponse);\n};\nexport const authorize = (userEmail, userPassword) => {\n  console.log(userEmail, userPassword);\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    },\n    body: JSON.stringify({\n      \"password\": userEmail,\n      \"email\": userPassword\n    })\n  }).then(getResponse);\n};\nexport const getToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      // \"Authorization\" : `Bearer ${localStorage.getItem('token')}`\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(getResponse);\n};","map":{"version":3,"names":["BASE_URL","getResponse","res","ok","json","Promise","reject","status","register","userEmail","userPassword","console","log","fetch","method","headers","body","JSON","stringify","then","authorize","getToken","token"],"sources":["/Users/bagetgrilov/dev/mesto-react/src/mestoAuth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nconst getResponse = (res) => {\n    return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n  };\n\nexport const register = (userEmail, userPassword) => {\n    console.log(userEmail, userPassword);\n\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n            \"password\": userEmail,\n            \"email\": userPassword\n        })\n    })\n    .then(getResponse)\n}\n\nexport const authorize = (userEmail, userPassword) => {\n    console.log(userEmail, userPassword);\n\n    return fetch(`${BASE_URL}/signin`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n            \"password\": userEmail,\n            \"email\": userPassword\n        })\n    })\n    .then(getResponse)\n}\n\nexport const getToken = (token) => {\n\n    return fetch(`${BASE_URL}/users/me`, {\n        method: 'GET',\n        headers: {\n            \"Content-Type\": \"application/json\",\n            // \"Authorization\" : `Bearer ${localStorage.getItem('token')}`\n            \"Authorization\" : `Bearer ${token}`\n        }\n    })\n    .then(getResponse)\n}"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;AAEvD,MAAMC,WAAW,GAAIC,GAAG,IAAK;EACzB,OAAOA,GAAG,CAACC,EAAE,GAAGD,GAAG,CAACE,IAAI,EAAE,GAAGC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,EAAC,CAAC;AACtE,CAAC;AAEH,OAAO,MAAMC,QAAQ,GAAG,CAACC,SAAS,EAAEC,YAAY,KAAK;EACjDC,OAAO,CAACC,GAAG,CAACH,SAAS,EAAEC,YAAY,CAAC;EAEpC,OAAOG,KAAK,CAAE,GAAEb,QAAS,SAAQ,EAAE;IAC/Bc,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,QAAQ,EAAE;IACd,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjB,UAAU,EAAET,SAAS;MACrB,OAAO,EAAEC;IACb,CAAC;EACL,CAAC,CAAC,CACDS,IAAI,CAAClB,WAAW,CAAC;AACtB,CAAC;AAED,OAAO,MAAMmB,SAAS,GAAG,CAACX,SAAS,EAAEC,YAAY,KAAK;EAClDC,OAAO,CAACC,GAAG,CAACH,SAAS,EAAEC,YAAY,CAAC;EAEpC,OAAOG,KAAK,CAAE,GAAEb,QAAS,SAAQ,EAAE;IAC/Bc,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,QAAQ,EAAE;IACd,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjB,UAAU,EAAET,SAAS;MACrB,OAAO,EAAEC;IACb,CAAC;EACL,CAAC,CAAC,CACDS,IAAI,CAAClB,WAAW,CAAC;AACtB,CAAC;AAED,OAAO,MAAMoB,QAAQ,GAAIC,KAAK,IAAK;EAE/B,OAAOT,KAAK,CAAE,GAAEb,QAAS,WAAU,EAAE;IACjCc,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC;MACA,eAAe,EAAI,UAASO,KAAM;IACtC;EACJ,CAAC,CAAC,CACDH,IAAI,CAAClB,WAAW,CAAC;AACtB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}