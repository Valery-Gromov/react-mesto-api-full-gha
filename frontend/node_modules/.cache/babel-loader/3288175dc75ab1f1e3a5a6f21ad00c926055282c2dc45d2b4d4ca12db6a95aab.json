{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nconst getResponse = res => {\n  return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n};\nexport const register = (userEmail, userPassword) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"password\": userEmail,\n      \"email\": userPassword\n    })\n  }).then(response => {\n    console.log(response);\n    try {\n      if (response.status === 200) {\n        return response.json();\n      }\n    } catch (e) {\n      console.log(e);\n      return e;\n    }\n  }).then(res => {\n    console.log(res);\n    return res;\n  }).catch(err => console.log(err));\n};","map":{"version":3,"names":["BASE_URL","getResponse","res","ok","json","Promise","reject","status","register","userEmail","userPassword","fetch","method","headers","body","JSON","stringify","then","response","console","log","e","catch","err"],"sources":["/Users/bagetgrilov/dev/mesto-react/src/mestoAuth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nconst getResponse = (res) => {\n    return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n  };\n\nexport const register = (userEmail, userPassword) => {\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            \"password\": userEmail,\n            \"email\": userPassword\n        })\n    })\n        .then((response) => {\n            console.log(response);\n            try {\n                if (response.status === 200) {\n                    return response.json();\n                }\n            } catch (e) {\n                console.log(e);\n                return (e)\n            }\n        })\n        .then((res) => {\n            console.log(res);\n            return res;\n        })\n        .catch((err) => console.log(err));\n};"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;AAEvD,MAAMC,WAAW,GAAIC,GAAG,IAAK;EACzB,OAAOA,GAAG,CAACC,EAAE,GAAGD,GAAG,CAACE,IAAI,EAAE,GAAGC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,EAAC,CAAC;AACtE,CAAC;AAEH,OAAO,MAAMC,QAAQ,GAAG,CAACC,SAAS,EAAEC,YAAY,KAAK;EACjD,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IAC/BY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjB,UAAU,EAAEP,SAAS;MACrB,OAAO,EAAEC;IACb,CAAC;EACL,CAAC,CAAC,CACGO,IAAI,CAAEC,QAAQ,IAAK;IAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACrB,IAAI;MACA,IAAIA,QAAQ,CAACX,MAAM,KAAK,GAAG,EAAE;QACzB,OAAOW,QAAQ,CAACd,IAAI,EAAE;MAC1B;IACJ,CAAC,CAAC,OAAOiB,CAAC,EAAE;MACRF,OAAO,CAACC,GAAG,CAACC,CAAC,CAAC;MACd,OAAQA,CAAC;IACb;EACJ,CAAC,CAAC,CACDJ,IAAI,CAAEf,GAAG,IAAK;IACXiB,OAAO,CAACC,GAAG,CAAClB,GAAG,CAAC;IAChB,OAAOA,GAAG;EACd,CAAC,CAAC,CACDoB,KAAK,CAAEC,GAAG,IAAKJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC,CAAC;AACzC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}