{"ast":null,"code":"var _jsxFileName = \"/Users/bagetgrilov/dev/mesto-react/src/components/App.js\",\n  _s = $RefreshSig$();\nimport closePopupButtonImage from '../images/button__cross.svg';\nimport { useEffect, useState } from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport imgSuccess from '../images/img-success.svg';\nimport imgFail from '../images/img-fail.svg';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport { api } from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport Login from './Login';\nimport Register from './Register';\nimport PageNotFound from './PageNotFound';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoTooltip from './InfoTooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isEditPopupIsOpen, setIsEditPopupIsOpen] = useState(false);\n  const [isEditAvatarIsOpen, setIsEditAvatarIsOpen] = useState(false);\n  const [isAddPlaceIsOpen, setIsAddPlaceIsOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  // Запрос данных профиля с сервера\n  useEffect(() => {\n    api.getProfile().then(userData => {\n      setCurrentUser(userData);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  // Запрос карточек с сервера\n  useEffect(() => {\n    api.getInitialCards().then(cardsList => {\n      setCards(cardsList);\n    }).catch(err => {\n      // тут ловим ошибку\n      console.log(err);\n    });\n  }, []);\n  function handleEditProfileClick() {\n    setIsEditPopupIsOpen(true);\n  }\n  ;\n  function handleEditAvatarClick() {\n    setIsEditAvatarIsOpen(true);\n  }\n  ;\n  function handleAddPlaceClick() {\n    setIsAddPlaceIsOpen(true);\n  }\n  ;\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n  function closeAllPopups() {\n    setIsEditPopupIsOpen(false);\n    setIsEditAvatarIsOpen(false);\n    setIsAddPlaceIsOpen(false);\n    setSelectedCard({});\n  }\n  ;\n  function handleUpdateUser(data) {\n    api.editProfile(data.name, data.about).then(userData => {\n      setCurrentUser(userData);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  ;\n  function handleUpdateAvatar(data) {\n    api.uploadAvatar(data.avatar).then(userData => {\n      setCurrentUser(userData);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  ;\n  function handleAddPlaceSubmit(data) {\n    api.addCard(data.name, data.link).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  ;\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    if (!isLiked) {\n      api.addLike(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      api.deleteLike(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n  ;\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(res => {\n      setCards(state => state.filter(c => c._id !== card._id));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  function handleLogin() {\n    setLoggedIn(true);\n  }\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/main\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          loggedIn: loggedIn,\n          component: /*#__PURE__*/_jsxDEV(Main, {\n            cards: cards,\n            onCardLike: handleCardLike,\n            onCardDelete: handleCardDelete,\n            onCardClick: handleCardClick,\n            handleEditAvatarClick: handleEditAvatarClick,\n            handleEditProfileClick: handleEditProfileClick,\n            handleAddPlaceClick: handleAddPlaceClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signin\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          handleLogin: handleLogin,\n          loggedIn: loggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: loggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/main\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 41\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/signin\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 75\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(PageNotFound, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n      isOpen: isEditAvatarIsOpen,\n      onClose: closeAllPopups,\n      onUpdateAvatar: handleUpdateAvatar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n      isOpen: isEditPopupIsOpen,\n      onClose: closeAllPopups,\n      onUpdateUser: handleUpdateUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n      isOpen: isAddPlaceIsOpen,\n      onClose: closeAllPopups,\n      onAddPlace: handleAddPlaceSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n      card: selectedCard,\n      onClose: closeAllPopups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n      image: imgSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"W1nSrNoyoXRAHLOb6EGFhecaXoA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["closePopupButtonImage","useEffect","useState","Routes","Route","Navigate","imgSuccess","imgFail","Header","Main","Footer","PopupWithForm","ImagePopup","EditProfilePopup","EditAvatarPopup","AddPlacePopup","api","CurrentUserContext","Login","Register","PageNotFound","ProtectedRoute","InfoTooltip","App","isEditPopupIsOpen","setIsEditPopupIsOpen","isEditAvatarIsOpen","setIsEditAvatarIsOpen","isAddPlaceIsOpen","setIsAddPlaceIsOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","loggedIn","setLoggedIn","getProfile","then","userData","catch","err","console","log","getInitialCards","cardsList","handleEditProfileClick","handleEditAvatarClick","handleAddPlaceClick","handleCardClick","card","closeAllPopups","handleUpdateUser","data","editProfile","name","about","handleUpdateAvatar","uploadAvatar","avatar","handleAddPlaceSubmit","addCard","link","newCard","handleCardLike","isLiked","likes","some","i","_id","addLike","state","map","c","deleteLike","handleCardDelete","deleteCard","res","filter","handleLogin"],"sources":["/Users/bagetgrilov/dev/mesto-react/src/components/App.js"],"sourcesContent":["import closePopupButtonImage from '../images/button__cross.svg'\nimport { useEffect, useState } from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport imgSuccess from '../images/img-success.svg';\nimport imgFail from '../images/img-fail.svg';\n\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport { api } from '../utils/Api';\n\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport Login from './Login';\nimport Register from './Register';\nimport PageNotFound from './PageNotFound';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoTooltip from './InfoTooltip'\n\nfunction App() {\n    const [isEditPopupIsOpen, setIsEditPopupIsOpen] = useState(false);\n    const [isEditAvatarIsOpen, setIsEditAvatarIsOpen] = useState(false);\n    const [isAddPlaceIsOpen, setIsAddPlaceIsOpen] = useState(false);\n    const [selectedCard, setSelectedCard] = useState({});\n    const [currentUser, setCurrentUser] = useState({});\n    const [cards, setCards] = useState([]);\n    const [loggedIn, setLoggedIn] = useState(false);\n\n    // Запрос данных профиля с сервера\n    useEffect(() => {\n        api.getProfile()\n            .then(userData => {\n                setCurrentUser(userData)\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }, []);\n\n    // Запрос карточек с сервера\n    useEffect(() => {\n        api.getInitialCards()\n            .then(cardsList => {\n\n                setCards(cardsList);\n            })\n            .catch(err => {\n                // тут ловим ошибку\n                console.log(err)\n            });\n    }, []);\n\n\n    function handleEditProfileClick() {\n        setIsEditPopupIsOpen(true);\n    };\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarIsOpen(true);\n    };\n    function handleAddPlaceClick() {\n        setIsAddPlaceIsOpen(true);\n    };\n    function handleCardClick(card) {\n        setSelectedCard(card);\n    }\n\n    function closeAllPopups() {\n        setIsEditPopupIsOpen(false);\n        setIsEditAvatarIsOpen(false);\n        setIsAddPlaceIsOpen(false);\n        setSelectedCard({});\n    };\n\n    function handleUpdateUser(data) {\n        api.editProfile(data.name, data.about)\n            .then(userData => {\n                setCurrentUser(userData);\n                closeAllPopups();\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    };\n\n    function handleUpdateAvatar(data) {\n        api.uploadAvatar(data.avatar)\n            .then(userData => {\n                setCurrentUser(userData);\n                closeAllPopups();\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    };\n\n    function handleAddPlaceSubmit(data) {\n        api.addCard(data.name, data.link)\n            .then(newCard => {\n                setCards([newCard, ...cards]);\n                closeAllPopups();\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    };\n\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n        if (!isLiked) {\n            api.addLike(card._id)\n                .then(newCard => {\n                    setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n                })\n                .catch(err => {\n                    console.log(err);\n                })\n        } else {\n            api.deleteLike(card._id)\n                .then(newCard => {\n                    setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n                })\n                .catch(err => {\n                    console.log(err);\n                })\n        }\n\n    };\n\n    function handleCardDelete(card) {\n\n        api.deleteCard(card._id)\n            .then(res => {\n                setCards((state) => state.filter((c) => c._id !== card._id))\n            })\n            .catch(err => {\n                console.log(err);\n            })\n\n    }\n\n    function handleLogin() {\n        setLoggedIn(true);\n    }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <Header />\n            <Routes>\n                <Route\n                    path=\"/main\"\n                    element={<ProtectedRoute\n                        loggedIn={loggedIn}\n                        component={<Main cards={cards} onCardLike={handleCardLike} onCardDelete={handleCardDelete} onCardClick={handleCardClick} handleEditAvatarClick={handleEditAvatarClick} handleEditProfileClick={handleEditProfileClick} handleAddPlaceClick={handleAddPlaceClick} />}\n                    />}\n                />\n                <Route\n                    path=\"/signup\"\n                    element={<Register />}\n                />\n                <Route\n                    path=\"/signin\"\n                    element={<Login handleLogin={handleLogin} loggedIn={loggedIn} />}\n                />\n                {/* <Route\n                    path=\"/main\"\n                    element={<Main cards={cards} onCardLike={handleCardLike} onCardDelete={handleCardDelete} onCardClick={handleCardClick} handleEditAvatarClick={handleEditAvatarClick} handleEditProfileClick={handleEditProfileClick} handleAddPlaceClick={handleAddPlaceClick} />}\n                /> */}\n                <Route\n                    path=\"/\"\n                    element={loggedIn ? <Navigate to=\"/main\" replace /> : <Navigate to=\"/signin\" replace />}\n                />\n                <Route\n                    path=\"*\"\n                    element={<PageNotFound />}\n                />\n            </Routes>\n            <Footer />\n\n            <EditAvatarPopup isOpen={isEditAvatarIsOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\n            <EditProfilePopup isOpen={isEditPopupIsOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n            <AddPlacePopup isOpen={isAddPlaceIsOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\n            <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n            <InfoTooltip image={imgSuccess}  />\n\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}