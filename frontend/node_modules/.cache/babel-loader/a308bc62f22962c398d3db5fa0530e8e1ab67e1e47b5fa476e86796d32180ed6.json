{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    // тело конструктора\n    this._baseUrl = baseUrl;\n  }\n  _checkResponse(res) {\n    return res.ok ? res.json() : Promise.reject(res.status);\n  }\n  getProfile() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n    // .catch(console.log)\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n    // .catch(console.log)\n  }\n\n  editProfile(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(this._checkResponse);\n    // .catch(console.log)\n  }\n\n  addCard(name, link) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(this._checkResponse);\n    // .catch(console.log)\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n    // .catch(console.log)\n  }\n\n  deleteLike(id) {\n    return fetch(`${this._baseUrl}/cards/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n    // .catch(console.log)\n  }\n\n  addLike(id) {\n    return fetch(`${this._baseUrl}/cards/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._checkResponse);\n    // .catch(console.log)\n  }\n\n  uploadAvatar(avatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(this._checkResponse);\n    // .catch(console.log)\n  }\n}\n\nexport const api = new Api({\n  baseUrl: 'http://localhost:3000'\n});","map":{"version":3,"names":["Api","constructor","baseUrl","headers","_baseUrl","_checkResponse","res","ok","json","Promise","reject","status","getProfile","fetch","_headers","then","getInitialCards","editProfile","name","about","method","body","JSON","stringify","addCard","link","deleteCard","id","deleteLike","addLike","uploadAvatar","avatar","api"],"sources":["/Users/bagetgrilov/dev/react-mesto-api-full-gha/frontend/src/utils/Api.js"],"sourcesContent":["class Api {\n    constructor({ baseUrl, headers }) {\n      // тело конструктора\n      this._baseUrl = baseUrl;\n    }\n\n    _checkResponse(res) {\n        return res.ok ? res.json() : Promise.reject(res.status)\n    }\n  \n    getProfile() {\n        return fetch(`${this._baseUrl}/users/me`, {\n            headers: this._headers\n        })\n        .then(this._checkResponse)\n        // .catch(console.log)\n    }\n\n    getInitialCards() {\n        return fetch(`${this._baseUrl}/cards`, {\n            headers: this._headers\n        })\n        .then(this._checkResponse)\n        // .catch(console.log)\n    }\n\n    editProfile(name, about) {\n        return fetch(`${this._baseUrl}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name,\n                about\n              })\n        })\n        .then(this._checkResponse)\n        // .catch(console.log)\n    }\n\n    addCard(name, link) {\n        return fetch(`${this._baseUrl}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name,\n                link\n              })\n        })\n        .then(this._checkResponse)\n        // .catch(console.log)\n    }\n\n    deleteCard(id) {\n        return fetch(`${this._baseUrl}/cards/`, {\n            method: 'DELETE',\n            headers: this._headers\n        })\n        .then(this._checkResponse)\n        // .catch(console.log)\n    }\n\n    deleteLike(id) {\n        return fetch(`${this._baseUrl}/cards/likes`, {\n            method: 'DELETE',\n            headers: this._headers\n        })\n        .then(this._checkResponse)\n        // .catch(console.log)\n    }\n\n    addLike(id) {\n        return fetch(`${this._baseUrl}/cards/likes`, {\n            method: 'PUT',\n            headers: this._headers\n        })\n        .then(this._checkResponse)\n        // .catch(console.log)\n    }\n\n    uploadAvatar(avatar) {\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar\n              })\n        })\n        .then(this._checkResponse)\n        // .catch(console.log)\n    }\n  \n  }\n\n  \n  \n export const api = new Api({\n    baseUrl: 'http://localhost:3000',\n  });"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}