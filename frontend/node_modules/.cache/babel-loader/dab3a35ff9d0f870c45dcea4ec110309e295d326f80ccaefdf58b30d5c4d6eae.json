{"ast":null,"code":"var _jsxFileName = \"/Users/bagetgrilov/dev/mesto-react/src/components/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nimport imgFail from '../images/img-fail.svg';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport { api } from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoTooltip from './InfoTooltip';\nimport * as mestoAuth from '../utils/mestoAuth.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isEditPopupIsOpen, setIsEditPopupIsOpen] = useState(false);\n  const [isEditAvatarIsOpen, setIsEditAvatarIsOpen] = useState(false);\n  const [isAddPlaceIsOpen, setIsAddPlaceIsOpen] = useState(false);\n  const [isInfoTooltipIsOpen, setIsInfoTooltipIsOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [infoTooltipData, setInfoTooltipData] = useState({\n    image: '',\n    text: ''\n  });\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [loginFormValue, setLoginFormValue] = useState({\n    userEmail: '',\n    userPassword: ''\n  });\n  const [currentUserEmail, setCurrentUserEmail] = useState('');\n  const navigate = useNavigate();\n\n  // Запрос данных профиля с сервера\n  useEffect(() => {\n    api.getProfile().then(userData => {\n      setCurrentUser(userData);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  // Запрос карточек с сервера\n  useEffect(() => {\n    api.getInitialCards().then(cardsList => {\n      setCards(cardsList);\n    }).catch(err => {\n      // тут ловим ошибку\n      console.log(err);\n    });\n  }, []);\n\n  // Проверка токена\n  useEffect(() => {\n    checkToken();\n  }, []);\n  function checkToken() {\n    const jwt = localStorage.getItem('token');\n    if (jwt) {\n      mestoAuth.getToken(jwt).then(res => {\n        setLoggedIn(true);\n        navigate('/main', {\n          replace: true\n        });\n        setCurrentUserEmail(res.data.email);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n    ;\n  }\n  ;\n  function handleLoginSubmit(userEmail, userPassword) {\n    return mestoAuth.authorize(userEmail, userPassword).then(res => {\n      if (res.token) {\n        console.log(res);\n        localStorage.setItem('token', res.token);\n        handleLogin();\n        navigate('/main', {\n          replace: true\n        });\n        setCurrentUserEmail(userEmail);\n      }\n    });\n    // .catch((err) => {\n    //     console.log(err);\n    //     setInfoTooltipData({\n    //         image: imgFail,\n    //         text: `Что-то пошло не так! ${err}. Попробуйте ещё раз.`\n    //     });\n    //     handleInfoTooltipIsOpen();\n    // })\n  }\n\n  function handleEditProfileClick() {\n    setIsEditPopupIsOpen(true);\n  }\n  ;\n  function handleEditAvatarClick() {\n    setIsEditAvatarIsOpen(true);\n  }\n  ;\n  function handleAddPlaceClick() {\n    setIsAddPlaceIsOpen(true);\n  }\n  ;\n  function handleInfoTooltipIsOpen() {\n    setIsInfoTooltipIsOpen(true);\n  }\n  ;\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n  ;\n  function closeAllPopups() {\n    setIsEditPopupIsOpen(false);\n    setIsEditAvatarIsOpen(false);\n    setIsAddPlaceIsOpen(false);\n    setIsInfoTooltipIsOpen(false);\n    setSelectedCard({});\n  }\n  ;\n  function handleUpdateUser(data) {\n    api.editProfile(data.name, data.about).then(userData => {\n      setCurrentUser(userData);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  ;\n  function handleUpdateAvatar(data) {\n    api.uploadAvatar(data.avatar).then(userData => {\n      setCurrentUser(userData);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  ;\n  function handleAddPlaceSubmit(data) {\n    api.addCard(data.name, data.link).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  ;\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    if (!isLiked) {\n      api.addLike(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      api.deleteLike(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n  ;\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(res => {\n      setCards(state => state.filter(c => c._id !== card._id));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  function handleLogin() {\n    setLoggedIn(true);\n  }\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      loggedIn: loggedIn,\n      currentUserEmail: currentUserEmail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/main\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          loggedIn: loggedIn,\n          component: Main,\n          cards: cards,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete,\n          onCardClick: handleCardClick,\n          handleEditAvatarClick: handleEditAvatarClick,\n          handleEditProfileClick: handleEditProfileClick,\n          handleAddPlaceClick: handleAddPlaceClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(Register, {\n          setInfoTooltipData: setInfoTooltipData,\n          handleInfoTooltipIsOpen: handleInfoTooltipIsOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signin\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          setInfoTooltipData: setInfoTooltipData,\n          handleInfoTooltipIsOpen: handleInfoTooltipIsOpen,\n          loginFormValue: loginFormValue,\n          handleLoginSubmit: handleLoginSubmit,\n          handleLogin: handleLogin,\n          loggedIn: loggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: loggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/main\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 41\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/signin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 67\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n      isOpen: isEditAvatarIsOpen,\n      onClose: closeAllPopups,\n      onUpdateAvatar: handleUpdateAvatar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n      isOpen: isEditPopupIsOpen,\n      onClose: closeAllPopups,\n      onUpdateUser: handleUpdateUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n      isOpen: isAddPlaceIsOpen,\n      onClose: closeAllPopups,\n      onAddPlace: handleAddPlaceSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n      card: selectedCard,\n      onClose: closeAllPopups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n      isOpen: isInfoTooltipIsOpen,\n      image: infoTooltipData.image,\n      text: infoTooltipData.text,\n      onClose: closeAllPopups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"1W8qwZ7PKWBTaHC3+SLfF0QZUmA=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Routes","Route","Navigate","useNavigate","imgFail","Header","Main","Footer","ImagePopup","EditProfilePopup","EditAvatarPopup","AddPlacePopup","api","CurrentUserContext","Login","Register","ProtectedRoute","InfoTooltip","mestoAuth","App","isEditPopupIsOpen","setIsEditPopupIsOpen","isEditAvatarIsOpen","setIsEditAvatarIsOpen","isAddPlaceIsOpen","setIsAddPlaceIsOpen","isInfoTooltipIsOpen","setIsInfoTooltipIsOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","infoTooltipData","setInfoTooltipData","image","text","loggedIn","setLoggedIn","loginFormValue","setLoginFormValue","userEmail","userPassword","currentUserEmail","setCurrentUserEmail","navigate","getProfile","then","userData","catch","err","console","log","getInitialCards","cardsList","checkToken","jwt","localStorage","getItem","getToken","res","replace","data","email","handleLoginSubmit","authorize","token","setItem","handleLogin","handleEditProfileClick","handleEditAvatarClick","handleAddPlaceClick","handleInfoTooltipIsOpen","handleCardClick","card","closeAllPopups","handleUpdateUser","editProfile","name","about","handleUpdateAvatar","uploadAvatar","avatar","handleAddPlaceSubmit","addCard","link","newCard","handleCardLike","isLiked","likes","some","i","_id","addLike","state","map","c","deleteLike","handleCardDelete","deleteCard","filter"],"sources":["/Users/bagetgrilov/dev/mesto-react/src/components/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nimport imgFail from '../images/img-fail.svg';\n\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport { api } from '../utils/Api';\n\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoTooltip from './InfoTooltip'\nimport * as mestoAuth from '../utils/mestoAuth.js'\n\nfunction App() {\n    const [isEditPopupIsOpen, setIsEditPopupIsOpen] = useState(false);\n    const [isEditAvatarIsOpen, setIsEditAvatarIsOpen] = useState(false);\n    const [isAddPlaceIsOpen, setIsAddPlaceIsOpen] = useState(false);\n    const [isInfoTooltipIsOpen, setIsInfoTooltipIsOpen] = useState(false);\n    const [selectedCard, setSelectedCard] = useState({});\n    const [currentUser, setCurrentUser] = useState({});\n    const [cards, setCards] = useState([]);\n    const [infoTooltipData, setInfoTooltipData] = useState({\n        image: '',\n        text: ''\n    });\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [loginFormValue, setLoginFormValue] = useState({\n        userEmail: '',\n        userPassword: ''\n    });\n    const [currentUserEmail, setCurrentUserEmail] = useState('');\n\n    const navigate = useNavigate();\n\n    // Запрос данных профиля с сервера\n    useEffect(() => {\n        api.getProfile()\n            .then(userData => {\n                setCurrentUser(userData)\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }, []);\n\n    // Запрос карточек с сервера\n    useEffect(() => {\n        api.getInitialCards()\n            .then(cardsList => {\n\n                setCards(cardsList);\n            })\n            .catch(err => {\n                // тут ловим ошибку\n                console.log(err)\n            });\n    }, []);\n\n    // Проверка токена\n    useEffect(() => {\n        checkToken()\n    }, []);\n\n    function checkToken() {\n        const jwt = localStorage.getItem('token');\n\n        if (jwt) {\n            mestoAuth.getToken(jwt)\n                .then((res) => {\n                    setLoggedIn(true);\n                    navigate('/main', { replace: true });\n                    setCurrentUserEmail(res.data.email);\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n        };\n    };\n\n    function handleLoginSubmit(userEmail, userPassword) {\n\n        return mestoAuth.authorize(userEmail, userPassword)\n            .then((res) => {\n                if (res.token) {\n                    console.log(res);\n                    localStorage.setItem('token', res.token);\n                    handleLogin();\n                    navigate('/main', { replace: true });\n                    setCurrentUserEmail(userEmail);\n\n                } \n            })\n            // .catch((err) => {\n            //     console.log(err);\n            //     setInfoTooltipData({\n            //         image: imgFail,\n            //         text: `Что-то пошло не так! ${err}. Попробуйте ещё раз.`\n            //     });\n            //     handleInfoTooltipIsOpen();\n            // })\n    }\n\n    function handleEditProfileClick() {\n        setIsEditPopupIsOpen(true);\n    };\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarIsOpen(true);\n    };\n    function handleAddPlaceClick() {\n        setIsAddPlaceIsOpen(true);\n    };\n    function handleInfoTooltipIsOpen() {\n        setIsInfoTooltipIsOpen(true)\n    };\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n    };\n\n    function closeAllPopups() {\n        setIsEditPopupIsOpen(false);\n        setIsEditAvatarIsOpen(false);\n        setIsAddPlaceIsOpen(false);\n        setIsInfoTooltipIsOpen(false);\n        setSelectedCard({});\n    };\n\n    function handleUpdateUser(data) {\n        api.editProfile(data.name, data.about)\n            .then(userData => {\n                setCurrentUser(userData);\n                closeAllPopups();\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    };\n\n    function handleUpdateAvatar(data) {\n        api.uploadAvatar(data.avatar)\n            .then(userData => {\n                setCurrentUser(userData);\n                closeAllPopups();\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    };\n\n    function handleAddPlaceSubmit(data) {\n        api.addCard(data.name, data.link)\n            .then(newCard => {\n                setCards([newCard, ...cards]);\n                closeAllPopups();\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    };\n\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n        if (!isLiked) {\n            api.addLike(card._id)\n                .then(newCard => {\n                    setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n                })\n                .catch(err => {\n                    console.log(err);\n                })\n        } else {\n            api.deleteLike(card._id)\n                .then(newCard => {\n                    setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n                })\n                .catch(err => {\n                    console.log(err);\n                })\n        }\n\n    };\n\n    function handleCardDelete(card) {\n\n        api.deleteCard(card._id)\n            .then(res => {\n                setCards((state) => state.filter((c) => c._id !== card._id))\n            })\n            .catch(err => {\n                console.log(err);\n            })\n\n    }\n\n    function handleLogin() {\n        setLoggedIn(true);\n    }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <Header loggedIn={loggedIn} currentUserEmail={currentUserEmail} />\n            <Routes>\n                <Route\n                    path=\"/main\"\n                    element={<ProtectedRoute\n                        loggedIn={loggedIn}\n                        component={Main}\n                        cards={cards}\n                        onCardLike={handleCardLike}\n                        onCardDelete={handleCardDelete}\n                        onCardClick={handleCardClick}\n                        handleEditAvatarClick={handleEditAvatarClick}\n                        handleEditProfileClick={handleEditProfileClick}\n                        handleAddPlaceClick={handleAddPlaceClick}\n                    />}\n                />\n                <Route\n                    path=\"/signup\"\n                    element={<Register setInfoTooltipData={setInfoTooltipData} handleInfoTooltipIsOpen={handleInfoTooltipIsOpen} />}\n                />\n                <Route\n                    path=\"/signin\"\n                    element={<Login setInfoTooltipData={setInfoTooltipData} handleInfoTooltipIsOpen={handleInfoTooltipIsOpen} loginFormValue={loginFormValue} handleLoginSubmit={handleLoginSubmit} handleLogin={handleLogin} loggedIn={loggedIn} />}\n                />\n                <Route\n                    path=\"*\"\n                    element={loggedIn ? <Navigate to=\"/main\" /> : <Navigate to=\"/signin\" />}\n                />\n            </Routes>\n            <Footer />\n\n            <EditAvatarPopup isOpen={isEditAvatarIsOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\n            <EditProfilePopup isOpen={isEditPopupIsOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n            <AddPlacePopup isOpen={isAddPlaceIsOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\n            <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n            <InfoTooltip isOpen={isInfoTooltipIsOpen} image={infoTooltipData.image} text={infoTooltipData.text} onClose={closeAllPopups} />\n            {/* <InfoTooltip image={imgFail} text=\"Что-то пошло не так! Попробуйте ещё раз.\" /> */}\n\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}