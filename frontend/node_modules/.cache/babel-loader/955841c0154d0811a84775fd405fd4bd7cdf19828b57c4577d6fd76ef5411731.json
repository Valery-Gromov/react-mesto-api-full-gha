{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nexport const register = (userEmail, userPassword) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      userEmail,\n      userPassword\n    })\n  }).then(response => {\n    try {\n      if (response.status === 200) {\n        return response.json();\n      }\n    } catch (e) {\n      return e;\n    }\n  }).then(res => {\n    console.log(res);\n    return res;\n  }).catch(err => console.log(err));\n};","map":{"version":3,"names":["BASE_URL","register","userEmail","userPassword","fetch","method","headers","body","JSON","stringify","then","response","status","json","e","res","console","log","catch","err"],"sources":["/Users/bagetgrilov/dev/mesto-react/src/mestoAuth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport const register = (userEmail, userPassword) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({userEmail, userPassword})\n  })\n  .then((response) => {\n    try {\n      if (response.status === 200){\n        return response.json();\n      }\n    } catch(e){\n      return (e)\n    }\n  })\n  .then((res) => {\n    console.log(res);\n    return res;\n  })\n  .catch((err) => console.log(err));\n};"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;AAEvD,OAAO,MAAMC,QAAQ,GAAG,CAACC,SAAS,EAAEC,YAAY,KAAK;EACnD,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACP,SAAS;MAAEC;IAAY,CAAC;EAChD,CAAC,CAAC,CACDO,IAAI,CAAEC,QAAQ,IAAK;IAClB,IAAI;MACF,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAC;QAC1B,OAAOD,QAAQ,CAACE,IAAI,EAAE;MACxB;IACF,CAAC,CAAC,OAAMC,CAAC,EAAC;MACR,OAAQA,CAAC;IACX;EACF,CAAC,CAAC,CACDJ,IAAI,CAAEK,GAAG,IAAK;IACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAChB,OAAOA,GAAG;EACZ,CAAC,CAAC,CACDG,KAAK,CAAEC,GAAG,IAAKH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC,CAAC;AACnC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}