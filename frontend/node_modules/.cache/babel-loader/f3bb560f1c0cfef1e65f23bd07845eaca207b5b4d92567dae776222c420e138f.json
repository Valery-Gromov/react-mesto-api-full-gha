{"ast":null,"code":"var _jsxFileName = \"/Users/bagetgrilov/dev/mesto-react/src/components/EditAvatarPopup.js\";\nimport { useState } from 'react';\nimport React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EditAvatarPopup(props) {\n  // const [name, setName] = useState('');\n  // const [description, setDescription] = useState('');\n\n  // // Подписка на контекст\n  // const currentUser = React.useContext(CurrentUserContext);\n\n  // // После загрузки текущего пользователя из API\n  // // его данные будут использованы в управляемых компонентах.\n  // // React.useEffect(() => {\n  // //     setName(currentUser.name);\n  // //     setDescription(currentUser.about);\n  // // }, [currentUser]);\n\n  // function handleNameChange(e) {\n  //     setName(e.target.value);\n  // }\n\n  // function handleDescriptionChange(e) {\n  //     setDescription(e.target.value);\n  // }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    // props.onUpdateUser({\n    //     name,\n    //     about: description,\n    // });\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    onSubmit: handleSubmit,\n    isOpen: props.isOpen && 'popup_opened',\n    title: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n    name: \"upload\",\n    buttonSave: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    onClose: props.onClose,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"popup__label popup__label_type_place-link\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"place-avatar-link-input\",\n          name: \"popup-place-link\",\n          type: \"url\",\n          placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n          className: \"popup__field popup__field_type_place-link\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"place-avatar-link-input-error\",\n          className: \"popup__field-error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_c = EditAvatarPopup;\nexport default EditAvatarPopup;\nvar _c;\n$RefreshReg$(_c, \"EditAvatarPopup\");","map":{"version":3,"names":["useState","React","PopupWithForm","CurrentUserContext","EditAvatarPopup","props","handleSubmit","e","preventDefault","isOpen","onClose"],"sources":["/Users/bagetgrilov/dev/mesto-react/src/components/EditAvatarPopup.js"],"sourcesContent":["import { useState } from 'react';\nimport React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\n\nfunction EditAvatarPopup(props) {\n    // const [name, setName] = useState('');\n    // const [description, setDescription] = useState('');\n\n    // // Подписка на контекст\n    // const currentUser = React.useContext(CurrentUserContext);\n\n    // // После загрузки текущего пользователя из API\n    // // его данные будут использованы в управляемых компонентах.\n    // // React.useEffect(() => {\n    // //     setName(currentUser.name);\n    // //     setDescription(currentUser.about);\n    // // }, [currentUser]);\n\n    // function handleNameChange(e) {\n    //     setName(e.target.value);\n    // }\n\n    // function handleDescriptionChange(e) {\n    //     setDescription(e.target.value);\n    // }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        // props.onUpdateUser({\n        //     name,\n        //     about: description,\n        // });\n    }\n\n\n\n    return (\n\n        <PopupWithForm onSubmit={handleSubmit} isOpen={props.isOpen && 'popup_opened'} title='Обновить аватар' name='upload' buttonSave='Сохранить' onClose={props.onClose}>\n            <>\n                <label className=\"popup__label popup__label_type_place-link\">\n                    <input id=\"place-avatar-link-input\" name=\"popup-place-link\" type=\"url\" placeholder=\"Ссылка на картинку\"\n                        className=\"popup__field popup__field_type_place-link\" required />\n                    <span id=\"place-avatar-link-input-error\" className=\"popup__field-error\"></span>\n                </label>\n            </>\n        </PopupWithForm>\n\n    );\n}\n\nexport default EditAvatarPopup;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,iBAAiB;AAE3C,SAASC,kBAAkB,QAAQ,gCAAgC;AAAC;AAAA;AAGpE,SAASC,eAAe,CAACC,KAAK,EAAE;EAC5B;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,SAASC,YAAY,CAACC,CAAC,EAAE;IACrBA,CAAC,CAACC,cAAc,EAAE;;IAElB;IACA;IACA;IACA;EACJ;;EAIA,oBAEI,QAAC,aAAa;IAAC,QAAQ,EAAEF,YAAa;IAAC,MAAM,EAAED,KAAK,CAACI,MAAM,IAAI,cAAe;IAAC,KAAK,EAAC,uFAAiB;IAAC,IAAI,EAAC,QAAQ;IAAC,UAAU,EAAC,wDAAW;IAAC,OAAO,EAAEJ,KAAK,CAACK,OAAQ;IAAA,uBAC/J;MAAA,uBACI;QAAO,SAAS,EAAC,2CAA2C;QAAA,wBACxD;UAAO,EAAE,EAAC,yBAAyB;UAAC,IAAI,EAAC,kBAAkB;UAAC,IAAI,EAAC,KAAK;UAAC,WAAW,EAAC,oGAAoB;UACnG,SAAS,EAAC,2CAA2C;UAAC,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QAAG,eACrE;UAAM,EAAE,EAAC,+BAA+B;UAAC,SAAS,EAAC;QAAoB;UAAA;UAAA;UAAA;QAAA,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA;IAC3E;EACT;IAAA;IAAA;IAAA;EAAA,QACS;AAGxB;AAAC,KA9CQN,eAAe;AAgDxB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}